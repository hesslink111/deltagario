plugins {
    id 'kotlin-multiplatform' version '1.3.11'
    id 'org.jetbrains.kotlin.frontend' version '0.0.44'
}


repositories {
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlin/kotlinx" }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers/' }
    maven { url "https://dl.bintray.com/danfma/kotlin-kodando" }
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js') {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    sourceMap = true
                    moduleKind = "commonjs"
                    metaInfo = true
                }
            }

            configure(compilations.main) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    main = "call"
                }
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                implementation "org.java-websocket:Java-WebSocket:1.3.9"
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
                implementation 'org.jetbrains:kotlin-react:16.6.0-pre.65-kotlin-1.3.11'
                implementation 'org.jetbrains:kotlin-react-dom:16.6.0-pre.65-kotlin-1.3.11'
                implementation 'org.jetbrains:kotlin-styled:1.0.0-pre.65-kotlin-1.3.11'
                implementation "br.danfma.kodando:kodando-rxjs:0.8.0"
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
    }
}

kotlinFrontend {
    npm {
        dependency("react", "16.6.0")
        dependency("react-dom", "16.6.0")
        dependency("styled-components", "3.4.6")
        dependency("inline-style-prefixer", "5.0.3")
        dependency("rxjs", "6.1.0")
    }

    webpackBundle {
        bundleName = "main"
        contentPath = file("build/webOutput/")
        proxyUrl = "http://localhost:8080"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'AppKt'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

run.dependsOn task('create-web-output', dependsOn: 'webpack-bundle') << {
    mkdir "build/webOutput"
    copy {
        from "public/"
        into "build/webOutput"
        include "*.html"
    }
    copy {
        from "build/bundle/"
        into "build/webOutput/"
        include "*.js"
    }
}

run.dependsOn(build)

task('run-jar', dependsOn: 'run') << {
    javaexec {
        classpath = files('build/libs/deltagario-jvm.jar')
        classpath += buildscript.configurations.classpath
        classpath += configurations.jvmRuntimeClasspath
        main = "AppKt"
    }
}