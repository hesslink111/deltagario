buildscript {
    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.44"
    }
}
plugins {
    id 'kotlin-multiplatform' version '1.3.11'
}
apply plugin: 'org.jetbrains.kotlin.frontend'

repositories {
    jcenter()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
    maven {
        url "https://dl.bintray.com/kotlin/kotlin-eap"
    }
}
kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js')
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
    }
}

compileKotlinJs {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}

kotlinFrontend {
    npm {
        dependency("react", "16.6.0")
        dependency("react-dom", "16.6.0")
    }
    webpackBundle {
        bundleName = "main"
        contentPath = file("build/webOutput/")
        proxyUrl = "http://localhost:8080"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'sample.SampleKt'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

run.dependsOn task('create-web-output', dependsOn: 'webpack-bundle') << {
    mkdir "build/webOutput"
    copy {
        from "public/"
        into "build/webOutput"
        include "*.html"
    }
    copy {
        from "build/bundle/"
        into "build/webOutput/"
        include "*.js"
    }
}

run.dependsOn task('run-jar', dependsOn: 'jar') << {
    javaexec {
        classpath = files('build/libs/deltagario-jvm.jar')
        classpath += buildscript.configurations.classpath
        main = "sample.SampleKt"
    }
}

run.dependsOn(build)